"use strict";

var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  var _react = _interopRequireDefault(require("react"));

  var _reactDom = _interopRequireDefault(require("react-dom"));

  var _apolloBoost = _interopRequireWildcard(require("apollo-boost"));

  var _apolloLinkHttp = require("apollo-link-http");

  var _apolloLinkContext = require("apollo-link-context");

  var _GlobalStyle = _interopRequireDefault(require("./components/GlobalStyle"));

  var _pages = _interopRequireDefault(require("./pages"));

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var App = function App() {
    var uri = "http://localhost:4000/api";
    var httpLink = (0, _apolloLinkHttp.createHttpLink)({
      uri: uri
    });
    var cache = new _apolloBoost.InMemoryCache();
    var authLink = (0, _apolloLinkContext.setContext)(function (_, _ref) {
      var headers = _ref.headers;
      return {
        headers: _objectSpread(_objectSpread({}, headers), {}, {
          authorization: localStorage.getItem('notejwt2020') || ''
        })
      };
    });
    var client = new _apolloBoost["default"]({
      link: authLink.concat(httpLink),
      cache: cache,
      connectToDevTools: true
    });
    var data = {
      isLoggedIn: !!localStorage.getItem('notejwt2020')
    };
    cache.writeData({
      data: data
    });
    client.onResetStore(function () {
      return cache.writeData({
        data: data
      });
    });
    return /*#__PURE__*/_react["default"].createElement(_apolloBoost.ApolloProvider, {
      client: client
    }, /*#__PURE__*/_react["default"].createElement(_GlobalStyle["default"], null), /*#__PURE__*/_react["default"].createElement(_pages["default"], null));
  };

  _c = App;

  _reactDom["default"].render( /*#__PURE__*/_react["default"].createElement(App, null), document.getElementById('root'));

  var _c;

  $RefreshReg$(_c, "App");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}